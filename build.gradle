plugins {
    id 'groovy-gradle-plugin'

    id 'org.jetbrains.kotlin.jvm' version '1.6.21'

    id 'com.gradle.plugin-publish' version '1.1.0'
}

group = 'com.markklim.plugins'
version = "1.0"

repositories {
    mavenCentral()
    maven {
        url = uri("https://plugins.gradle.org/m2/")
    }
}

dependencies {
    api 'ru.vyarus:gradle-quality-plugin:4.8.0'
    api 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.21.0'
    api 'io.gitlab.arturbosch.detekt:detekt-api:1.21.0'

    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
    testImplementation 'com.netflix.nebula:nebula-test:10.2.0'
    testImplementation 'io.gitlab.arturbosch.detekt:detekt-test:1.21.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

gradlePlugin {
    website = 'https://markklim.com'
    vcsUrl = 'https://github.com/MarkKlimenko/plugins'

    plugins {
        codeQuality {
            id = 'com.markklim.popcorn.quality'
            displayName = 'Java Kotlin code quality plugin'
            description = 'Java Kotlin code quality plugin'
            tags.addAll('quality', 'java', 'kotlin')
            implementationClass = 'com.markklim.popcorn.plugin.CodeQualityPlugin'
        }
        codeQualityJava {
            id = 'com.markklim.popcorn.quality.java'
            displayName = 'Java code quality plugin'
            description = 'Java Kotlin code quality plugin'
            tags.addAll('java')
            implementationClass = 'com.markklim.popcorn.plugin.java.CodeQualityJavaPlugin'
        }
        codeQualityKotlin {
            id = 'com.markklim.popcorn.quality.kotlin'
            displayName = 'Kotlin code quality plugin'
            description = 'Java Kotlin code quality plugin'
            tags.addAll('kotlin')
            implementationClass = 'com.markklim.popcorn.plugin.kotlin.CodeQualityKotlinPlugin'
        }
        codeCoverage {
            id = 'com.markklim.popcorn.coverage'
            displayName = 'Code coverage plugin'
            description = 'Java Kotlin code quality plugin'
            tags.addAll('java', 'kotlin', 'test')
            implementationClass = 'com.markklim.popcorn.plugin.coverage.CodeCoveragePlugin'
        }
    }
}

// need for local plugin testing
// ./gradlew publish
publishing {
    repositories {
        maven {
            name = 'localPluginRepository'
            url = '../local-plugin-repository'
        }
    }
}

test {
    useJUnitPlatform()
}
